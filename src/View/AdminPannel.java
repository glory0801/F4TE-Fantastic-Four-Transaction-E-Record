/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package View;

import Controller.ControllerFactory;
import Controller.CrudOperations;
import Model.CashAccount;
import Model.User;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author glory
 */
public class AdminPannel extends javax.swing.JFrame {

    private final MainPage mainPage;
    /**
     * Creates new form AdminPannel
     */
    CrudOperations<User> userController = (CrudOperations<User>) ControllerFactory.getController("USER");
    CrudOperations<CashAccount> cashController = (CrudOperations<CashAccount>) ControllerFactory.getController("CASH");
    
    ButtonGroup buttonGroup = new ButtonGroup();
    String gender;
    String type;

    public AdminPannel(MainPage mainPage) {
        initComponents();
        this.mainPage = mainPage;
        this.setLocationRelativeTo(null);
        buttonGroup.add(maleRadioButton);
        buttonGroup.add(femaleRadioButton);
        studentTableAdmin("all");
        cashTable("all");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cashType = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userNIMField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        userPhoneNumberField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        userEmailField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        userPasswordField = new javax.swing.JTextField();
        addUserButton = new javax.swing.JButton();
        exitAddUsersButton = new javax.swing.JButton();
        clearUserFieldsButton = new javax.swing.JButton();
        maleRadioButton = new javax.swing.JRadioButton();
        femaleRadioButton = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        editUserButton = new javax.swing.JButton();
        deleteUserButton = new javax.swing.JButton();
        searchUserButton = new javax.swing.JButton();
        printUserButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        studentAdminTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        cashNameField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cashAmountField = new javax.swing.JTextField();
        exitCashFlowButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        cashDescriptionField = new javax.swing.JTextField();
        cashDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cashTable = new javax.swing.JTable();
        addCashButton = new javax.swing.JButton();
        editCashButton = new javax.swing.JButton();
        deleteCashButton = new javax.swing.JButton();
        searchCashButton = new javax.swing.JButton();
        printCashButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cashIdField = new javax.swing.JTextField();
        kasMasukRadioButton = new javax.swing.JRadioButton();
        kasKeluarRadioButton = new javax.swing.JRadioButton();
        clearCashFieldsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        kasMasukLabel = new javax.swing.JLabel();
        kasKeluarLabel = new javax.swing.JLabel();
        totalKasLabel = new javax.swing.JLabel();
        ringkasanKasButton = new javax.swing.JButton();
        exitSummaryButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin DashBoard");

        jLabel1.setText("NIM :");

        userNIMField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNIMFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Nama :");

        jLabel3.setText("Nomor HP:");

        jLabel4.setText("Email :");

        jLabel5.setText("Password :");

        addUserButton.setText("Add User");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        exitAddUsersButton.setText("Back To Main Menu");
        exitAddUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitAddUsersButtonActionPerformed(evt);
            }
        });

        clearUserFieldsButton.setText("Clear Fields");
        clearUserFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearUserFieldsButtonActionPerformed(evt);
            }
        });

        maleRadioButton.setText("Laki-Laki");
        maleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleRadioButtonActionPerformed(evt);
            }
        });

        femaleRadioButton.setText("Perempuan");
        femaleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleRadioButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Jenis Kelamin :");

        editUserButton.setText("Edit User");
        editUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButtonActionPerformed(evt);
            }
        });

        deleteUserButton.setText("Delete User");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });

        searchUserButton.setText("Search User");
        searchUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUserButtonActionPerformed(evt);
            }
        });

        printUserButton.setText("Print CSV");
        printUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printUserButtonActionPerformed(evt);
            }
        });

        studentAdminTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIM", "Nama", "Jenis Kelamin", "No HP", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(studentAdminTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitAddUsersButton)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel6))
                                .addGap(41, 41, 41)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userNameField)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(maleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(femaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 54, Short.MAX_VALUE))
                                    .addComponent(userNIMField)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(editUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deleteUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearUserFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(printUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(userPhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(userEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(userPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNIMField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userPhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(maleRadioButton)
                    .addComponent(femaleRadioButton)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUserButton)
                    .addComponent(deleteUserButton)
                    .addComponent(printUserButton)
                    .addComponent(clearUserFieldsButton)
                    .addComponent(editUserButton)
                    .addComponent(searchUserButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitAddUsersButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Users", jPanel1);

        jLabel9.setText("Nama");

        jLabel10.setText("Tanggal");

        jLabel11.setText("Jumlah");

        exitCashFlowButton.setText("Back to Main Menu");
        exitCashFlowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitCashFlowButtonActionPerformed(evt);
            }
        });

        jLabel13.setText("Keterangan");

        jLabel12.setText("Jenis Kas");

        cashTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Tanggal", "Jenis Kas", "Keterangan", "Jumlah"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(cashTable);

        addCashButton.setText("Add Cash");
        addCashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCashButtonActionPerformed(evt);
            }
        });

        editCashButton.setText("Edit Cash");
        editCashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCashButtonActionPerformed(evt);
            }
        });

        deleteCashButton.setText("Delete Cash");
        deleteCashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCashButtonActionPerformed(evt);
            }
        });

        searchCashButton.setText("Search Cash");
        searchCashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCashButtonActionPerformed(evt);
            }
        });

        printCashButton.setText("Print CSV");
        printCashButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printCashButtonActionPerformed(evt);
            }
        });

        jLabel14.setText("Note: Uang Kas Per Minggu 10.000");

        jLabel15.setText("ID Cash");

        cashIdField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashIdFieldActionPerformed(evt);
            }
        });

        cashType.add(kasMasukRadioButton);
        kasMasukRadioButton.setText("Kas Masuk");
        kasMasukRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kasMasukRadioButtonActionPerformed(evt);
            }
        });

        cashType.add(kasKeluarRadioButton);
        kasKeluarRadioButton.setText("Kas Keluar");
        kasKeluarRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kasKeluarRadioButtonActionPerformed(evt);
            }
        });

        clearCashFieldsButton.setText("Clear Fields");
        clearCashFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCashFieldsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exitCashFlowButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cashNameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cashDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cashIdField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(addCashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editCashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deleteCashButton, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(searchCashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cashAmountField)
                                    .addComponent(cashDescriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(kasMasukRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(kasKeluarRadioButton)
                                        .addGap(24, 24, 24))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(clearCashFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(printCashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(21, 21, 21))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel15)
                        .addComponent(cashIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cashAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(kasMasukRadioButton)
                            .addComponent(kasKeluarRadioButton))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cashDescriptionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cashNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel10))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cashDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCashButton)
                    .addComponent(editCashButton)
                    .addComponent(deleteCashButton)
                    .addComponent(searchCashButton)
                    .addComponent(printCashButton)
                    .addComponent(clearCashFieldsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitCashFlowButton)
                    .addComponent(jLabel14))
                .addGap(9, 9, 9))
        );

        jTabbedPane1.addTab("Cash Flow", jPanel4);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Kas Masuk:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Kas Keluar:");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel16.setText("Total Kas: ");

        kasMasukLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        kasMasukLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        kasKeluarLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        kasKeluarLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        totalKasLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        totalKasLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        ringkasanKasButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ringkasanKasButton.setText("Lihat Ringkasan Kas");
        ringkasanKasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ringkasanKasButtonActionPerformed(evt);
            }
        });

        exitSummaryButton.setText("Back to Main Menu");
        exitSummaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitSummaryButtonActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel17.setText("----------------------------------------------------- +");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("-");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(totalKasLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kasMasukLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(kasKeluarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(395, 395, 395)
                                .addComponent(exitSummaryButton)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ringkasanKasButton, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(112, 112, 112))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kasMasukLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kasKeluarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalKasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(ringkasanKasButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(exitSummaryButton)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Summary", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearCashFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCashFieldsButtonActionPerformed
        // TODO add your handling code here:
        clearFieldsCash();
    }//GEN-LAST:event_clearCashFieldsButtonActionPerformed

    private void kasKeluarRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kasKeluarRadioButtonActionPerformed
        // TODO add your handling code here:
        type = "Kas Keluar";
    }//GEN-LAST:event_kasKeluarRadioButtonActionPerformed

    private void kasMasukRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kasMasukRadioButtonActionPerformed
        // TODO add your handling code here:
        type = "Kas Masuk";
    }//GEN-LAST:event_kasMasukRadioButtonActionPerformed

    private void cashIdFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashIdFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cashIdFieldActionPerformed

    private void printCashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printCashButtonActionPerformed
        // TODO add your handling code here:

        List<CashAccount> cashList = cashController.getAll();
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files", "csv");
        fileChooser.setFileFilter(filter);
        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String csvFile = fileChooser.getSelectedFile().getAbsolutePath();
            if (!csvFile.endsWith(".csv")) {
                csvFile += ".csv";
            }

            try (FileWriter fileWriter = new FileWriter(csvFile)) {
                fileWriter.write("ID,Nama,Tanggal,Jenis Kas,Keterangan,Jumlah\n");
                for (CashAccount cash : cashList) {
                    String line = String.format("%s,%s,%s,%s,%s,%d\n", cash.getCashId(), cash.getName(),
                        cash.getDate(), cash.getCashType(), cash.getDescription(), cash.getAmount());
                    fileWriter.write(line);
                }
                System.out.println("Data has been exported to CSV file successfully.");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_printCashButtonActionPerformed

    private void searchCashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCashButtonActionPerformed
        // TODO add your handling code here:
        if (cashIdField.getText().equals("")) {
            JOptionPane.showMessageDialog(
                this, "Please Fill The Field",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            cashIdField.setText("");
        } else if (!(cashIdField.getText().matches("[0-9]*"))) {
            JOptionPane.showMessageDialog(
                this, "Cash ID Must Be Numeric Digits",
                "Invalid Data Type",
                JOptionPane.ERROR_MESSAGE);
            cashIdField.setText("");
        } else if (cashIdField.getText().length() != 7) {
            JOptionPane.showMessageDialog(
                this, "Cash ID Must Be 10 digts",
                "Invalid ID length",
                JOptionPane.ERROR_MESSAGE);
            cashIdField.setText("");
        } else {
            List<CashAccount> cashes = cashController.search("=", "cashId", cashIdField.getText());
            if (cashes.isEmpty()) {
                JOptionPane.showMessageDialog(
                    this, "Cash Not Found",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
                cashIdField.setText("");
            } else {
                CashAccount cash = cashes.get(0);

                cashIdField.setText(cash.getCashId());
                cashNameField.setText(cash.getName());
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                String amount = String.valueOf(cash.getAmount());
                try {
                    Date date = formatter.parse(cash.getDate());
                    cashDateChooser.setDate(date);
                } catch (ParseException e) {
                    e.printStackTrace();
                }
                if (cash.getCashType().equals("Kas Masuk")) {
                    kasMasukRadioButton.setSelected(true);
                } else {
                    kasKeluarRadioButton.setSelected(true);
                }
                cashDescriptionField.setText(cash.getDescription());
                cashAmountField.setText(amount);

                cashTable(cashIdField.getText());
            }
        }
    }//GEN-LAST:event_searchCashButtonActionPerformed

    private void deleteCashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCashButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (cashIdField.getText().equals("")) {
                JOptionPane.showMessageDialog(
                    this, "Please Fill In The Field",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                cashIdField.setText("");
            } else if (!(cashIdField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID Must Be Numric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
                cashIdField.setText("");
            } else if (cashIdField.getText().length() != 7) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID Must Be 7 digts",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
                cashIdField.setText("");
            } else {
                long flag = cashController.delete("=", "cashId", cashIdField.getText());

                if (flag >= 1) {
                    JOptionPane.showMessageDialog(
                        this, "Cash Account Deleted",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);

                    cashTable("all");
                    logChanges("Cash With ID : " + cashIdField.getText() + " Has Been Deleted");

                    clearFieldsCash();
                } else {
                    JOptionPane.showMessageDialog(
                        this, "Cash Not Found",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
                    cashIdField.setText("");
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(AdminPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteCashButtonActionPerformed

    private void editCashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editCashButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (cashIdField.getText().equals("")
                || cashNameField.getText().equals("")
                || cashDateChooser.getDate() == null
                || cashAmountField.getText().equals("")
                || (kasMasukRadioButton.isSelected() == false && kasKeluarRadioButton.isSelected() == false)
                || cashDescriptionField.getText().equals("")) {

                JOptionPane.showMessageDialog(
                    this, "Please Fill All Required Fields",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(cashIdField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(cashAmountField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Cash Amount Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (cashIdField.getText().length() != 7) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID Must Be 7 digits",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
            } else {

                String tampilan = "yyyy-MM-dd";
                SimpleDateFormat fm = new SimpleDateFormat(tampilan);
                String date = String.valueOf(fm.format(cashDateChooser.getDate()));
                int amount = Integer.parseInt(cashAmountField.getText());

                if (kasMasukRadioButton.isSelected() == true) {
                    type = "Kas Masuk";
                } else {
                    type = "Kas Keluar";
                }
                long flag1 = cashController.update("=", "cashId", cashIdField.getText(), "cashId", cashIdField.getText());
                long flag2 = cashController.update("=", "cashId", cashIdField.getText(), "name", cashNameField.getText());
                long flag3 = cashController.update("=", "cashId", cashIdField.getText(), "date", date);
                long flag4 = cashController.update("=", "cashId", cashIdField.getText(), "cashType", type);
                long flag5 = cashController.update("=", "cashId", cashIdField.getText(), "description", cashDescriptionField.getText());
                long flag6 = cashController.update("=", "cashId", cashIdField.getText(), "amount", amount);

                if (flag1 >= 1 && flag2 >= 1 && flag3 >= 1 && flag4 >= 1 && flag5 >= 1 && flag6 >= 1) {
                    JOptionPane.showMessageDialog(
                        this, "Changes Saved",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                    cashTable("all");

                    logChanges("Cash With ID : " + cashIdField.getText() + " Has Been Updated");
                    clearFieldsCash();
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editCashButtonActionPerformed

    private void addCashButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCashButtonActionPerformed
        // TODO add your handling code here:
        try {
            List<CashAccount> cashAccountList = cashController.search("=", "cashId", cashIdField.getText());

            if (cashIdField.getText().equals("")
                || cashNameField.getText().equals("")
                || cashDateChooser.getDate() == null
                || cashAmountField.getText().equals("")
                || (kasMasukRadioButton.isSelected() == false && kasKeluarRadioButton.isSelected() == false)
                || cashDescriptionField.getText().equals("")) {

                JOptionPane.showMessageDialog(
                    this, "Please Fill All Required Fields",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(cashIdField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(cashAmountField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Cash Amount Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (cashIdField.getText().length() != 7) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID Must Be 7 digits",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
            } else if (cashAccountList.size() >= 1) {
                JOptionPane.showMessageDialog(
                    this, "Cash ID is already used",
                    "Invalid Entry",
                    JOptionPane.ERROR_MESSAGE);
            } else {
                String tampilan = "yyyy-MM-dd";
                SimpleDateFormat fm = new SimpleDateFormat(tampilan);
                String date = String.valueOf(fm.format(cashDateChooser.getDate()));
                int amount = Integer.parseInt(cashAmountField.getText());

                CashAccount cashAccount = new CashAccount (
                    cashIdField.getText(),
                    cashNameField.getText(),
                    date,
                    type,
                    cashDescriptionField.getText(),
                    amount
                );

                cashController.insert(cashAccount);

                JOptionPane.showMessageDialog(
                    this, "Cash Account Created",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);

                cashTable("all");
                logChanges("Cash With ID : " + cashIdField.getText() + " Has Been Created");
                clearFieldsCash();
            }

        } catch (IOException ex) {
            Logger.getLogger(AdminPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addCashButtonActionPerformed

    private void exitCashFlowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitCashFlowButtonActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(
            this, "Confirm Exit!",
            "Confirm",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        if (x == 0) {
            MainPage mainPage = new MainPage();
            this.setVisible(false);
            mainPage.setVisible(true);
        }
    }//GEN-LAST:event_exitCashFlowButtonActionPerformed

    private void printUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printUserButtonActionPerformed
        // TODO add your handling code here:
        List<User> userList = userController.getAll();
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV Files", "csv");
        fileChooser.setFileFilter(filter);
        int userSelection = fileChooser.showSaveDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            String csvFile = fileChooser.getSelectedFile().getAbsolutePath();
            if (!csvFile.endsWith(".csv")) {
                csvFile += ".csv";
            }

            try (FileWriter fileWriter = new FileWriter(csvFile)) {
                fileWriter.write("NIM,Nama,Jenis Kelamin,No HP,Email\n");
                for (User user : userList) {
                    String line = String.format("%s,%s,%s,%s,%s\n", user.getAccountId(), user.getName(),
                        user.getGender(), user.getPhone(), user.getEmail());
                    fileWriter.write(line);
                }
                System.out.println("Data has been exported to CSV file successfully.");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_printUserButtonActionPerformed

    private void searchUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserButtonActionPerformed
        // TODO add your handling code here:
        if (userNIMField.getText().equals("")) {
            JOptionPane.showMessageDialog(
                this, "Please Fill The Field",
                "Error",
                JOptionPane.ERROR_MESSAGE);
            userNIMField.setText("");
        } else if (!(userNIMField.getText().matches("[0-9]*"))) {
            JOptionPane.showMessageDialog(
                this, "Account ID Must Be Numeric Digits",
                "Invalid Data Type",
                JOptionPane.ERROR_MESSAGE);
            userNIMField.setText("");
        } else if (userNIMField.getText().length() != 10) {
            JOptionPane.showMessageDialog(
                this, "Account ID Must Be 10 digts",
                "Invalid ID length",
                JOptionPane.ERROR_MESSAGE);
            userNIMField.setText("");
        } else {

            List<User> users = userController.search("=", "accountId", userNIMField.getText());
            if (users.isEmpty()) {
                JOptionPane.showMessageDialog(
                    this, "User Not Found",
                    "Error",
                    JOptionPane.WARNING_MESSAGE);
                userNIMField.setText("");
            } else {
                User user = users.get(0);
                userNIMField.setText(user.getAccountId());
                userNameField.setText(user.getName());
                if (user.getGender().equals("Male")) {
                    maleRadioButton.setSelected(true);
                } else {
                    femaleRadioButton.setSelected(true);
                }
                userPhoneNumberField.setText(user.getPhone());
                userEmailField.setText(user.getEmail());
                userPasswordField.setText(user.getPassword());

                studentTableAdmin(userNIMField.getText());
            }
        }
    }//GEN-LAST:event_searchUserButtonActionPerformed

    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (userNIMField.getText().equals("")) {
                JOptionPane.showMessageDialog(
                    this, "Please Fill In The Feild",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                userNIMField.setText("");
            } else if (!(userNIMField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Account ID Must Be Numric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
                userNIMField.setText("");
            } else if (userNIMField.getText().length() != 10) {
                JOptionPane.showMessageDialog(
                    this, "Account ID Must Be 10 digts",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
                userNIMField.setText("");
            } else {
                long flag = userController.delete("=", "accountId", userNIMField.getText());

                if (flag >= 1) {
                    JOptionPane.showMessageDialog(
                        this, "User Account Deleted",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);

                    studentTableAdmin("all");
                    logChanges("Account With ID : " + userNIMField.getText() + " Has Been Deleted");

                    clearFieldsUser();
                } else {
                    JOptionPane.showMessageDialog(
                        this, "User Not Found",
                        "Error",
                        JOptionPane.WARNING_MESSAGE);
                    userNIMField.setText("");
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(AdminPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteUserButtonActionPerformed

    private void editUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButtonActionPerformed
        // TODO add your handling code here:
        try {
            if (userNIMField.getText().equals("")
                || userNameField.getText().equals("")
                || userPhoneNumberField.getText().equals("")
                || userEmailField.getText().equals("")
                || (maleRadioButton.isSelected() == false && femaleRadioButton.isSelected() == false)
                || userPasswordField.getText().equals("")) {

                JOptionPane.showMessageDialog(
                    this, "Please Fill All Required Fields",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(userNIMField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Account ID Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(userPhoneNumberField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Phone Number Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (userNIMField.getText().length() != 10) {
                JOptionPane.showMessageDialog(
                    this, "Account ID Must Be 10 digits",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(userEmailField.getText().matches("[A-Za-z0-9-_.]+@[A-Za-z0-9-_]+[.][a-zA-Z]{2,6}"))) {
                JOptionPane.showMessageDialog(
                    this, "Invalid Email Address",
                    "Invalid Entry",
                    JOptionPane.ERROR_MESSAGE);
            } else {
                if (maleRadioButton.isSelected() == true) {
                    gender = "Laki-Laki";
                } else {
                    gender = "Perempuan";
                }
                List<User> users = userController.search("=", "accountId", userNIMField.getText());
                User user = users.get(0);    
                List<CashAccount> cashes = cashController.search("=", "name", user.getName());

                long flag1 = userController.update("=", "accountId", userNIMField.getText(), "accountId", userNIMField.getText());
                long flag2 = userController.update("=", "accountId", userNIMField.getText(), "name", userNameField.getText());
                long flag3 = userController.update("=", "accountId", userNIMField.getText(), "gender", gender);
                long flag4 = userController.update("=", "accountId", userNIMField.getText(), "phone", userPhoneNumberField.getText());
                long flag5 = userController.update("=", "accountId", userNIMField.getText(), "email", userEmailField.getText());
                long flag6 = userController.update("=", "accountId", userNIMField.getText(), "password", userPasswordField.getText());
                boolean allUpdated = true;
                for (CashAccount cash : cashes) {
                    long flag = cashController.update("=", "name", cash.getName(), "name", userNameField.getText());
                    if (flag <= 0) { // If update failed or no rows were affected
                        allUpdated = false;
                        break; // Exit the loop as one update failed
                    }
                }
                
                if (flag1 >= 1 && flag2 >= 1 && flag3 >= 1 && flag4 >= 1 && flag5 >= 1 && flag6 >= 1 && allUpdated) {
                    JOptionPane.showMessageDialog(
                        this, "Changes Saved",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
                    studentTableAdmin("all");
                    cashTable("all");

                    logChanges("Account With ID : " + userNIMField.getText() + " Has Been Updated");
                    clearFieldsUser();
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(UserPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editUserButtonActionPerformed

    private void femaleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleRadioButtonActionPerformed
        gender = "Perempuan";
    }//GEN-LAST:event_femaleRadioButtonActionPerformed

    private void maleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleRadioButtonActionPerformed
        gender = "Laki-Laki";
    }//GEN-LAST:event_maleRadioButtonActionPerformed

    private void clearUserFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearUserFieldsButtonActionPerformed
        clearFieldsUser();
    }//GEN-LAST:event_clearUserFieldsButtonActionPerformed

    private void exitAddUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitAddUsersButtonActionPerformed
        int x = JOptionPane.showConfirmDialog(
            this, "Confirm Exit!",
            "Confirm",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        if (x == 0) {
            MainPage mainPage = new MainPage();
            this.setVisible(false);
            mainPage.setVisible(true);
        }
    }//GEN-LAST:event_exitAddUsersButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        try {
            List<User> usersList = userController.search("=", "accountId", userNIMField.getText());
            if (userNIMField.getText().equals("")
                || userNameField.getText().equals("")
                || userPhoneNumberField.getText().equals("")
                || userEmailField.getText().equals("")
                || (maleRadioButton.isSelected() == false && femaleRadioButton.isSelected() == false)
                || userPasswordField.getText().equals("")) {

                JOptionPane.showMessageDialog(
                    this, "Please Fill All Required Fields",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(userNIMField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Account ID Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(userPhoneNumberField.getText().matches("[0-9]*"))) {
                JOptionPane.showMessageDialog(
                    this, "Phone Number Must Be Numeric Digits",
                    "Invalid Data Type",
                    JOptionPane.ERROR_MESSAGE);
            } else if (userNIMField.getText().length() != 10) {
                JOptionPane.showMessageDialog(
                    this, "Account ID Must Be 10 digits",
                    "Invalid ID length",
                    JOptionPane.ERROR_MESSAGE);
            } else if (!(userEmailField.getText().matches("[A-Za-z0-9-_.]+@[A-Za-z0-9-_]+[.][a-zA-Z]{2,6}"))) {
                JOptionPane.showMessageDialog(
                    this, "Invalid Email Address",
                    "Invalid Entry",
                    JOptionPane.ERROR_MESSAGE);
            } else if (usersList.size() >= 1) {
                JOptionPane.showMessageDialog(
                    this, "Account ID is already used",
                    "Invalid Entry",
                    JOptionPane.ERROR_MESSAGE);
            } else {
                User user = new User(
                    userNIMField.getText(),
                    userPasswordField.getText(),
                    userNameField.getText(),
                    gender,
                    userPhoneNumberField.getText(),
                    userEmailField.getText(),
                    0);

                userController.insert(user);

                JOptionPane.showMessageDialog(
                    this, "User Account Created",
                    "Success",
                    JOptionPane.INFORMATION_MESSAGE);

                studentTableAdmin("all");
                logChanges("Account With ID : " + userNIMField.getText() + " Has Been Created");
                clearFieldsUser();
            }

        } catch (IOException ex) {
            Logger.getLogger(AdminPannel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void userNIMFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNIMFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNIMFieldActionPerformed

    private void ringkasanKasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ringkasanKasButtonActionPerformed
        // TODO add your handling code here:
            List<CashAccount> income = cashController.search("=", "cashType", "Kas Masuk");
            int kasMasuk = 0;
            if (income.size() >= 1) {
              for (CashAccount cash : income) {
                  kasMasuk += cash.getAmount();
              }
            }

            List<CashAccount> expenses = cashController.search("=", "cashType", "Kas Keluar");
            int kasKeluar = 0;
            if (expenses.size() >= 1) {
              for (CashAccount cash : expenses) {
                  kasKeluar += cash.getAmount();
              }
            }
            
            int totalKas = kasMasuk - kasKeluar;
            
            kasMasukLabel.setText(String.valueOf(kasMasuk));
            kasKeluarLabel.setText(String.valueOf(kasKeluar));
            totalKasLabel.setText(String.valueOf(totalKas));
    }//GEN-LAST:event_ringkasanKasButtonActionPerformed

    private void exitSummaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitSummaryButtonActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(
            this, "Confirm Exit!",
            "Confirm",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE);
        if (x == 0) {
            MainPage mainPage = new MainPage();
            this.setVisible(false);
            mainPage.setVisible(true);
        }
    }//GEN-LAST:event_exitSummaryButtonActionPerformed

    private void studentTableAdmin(String param){
        DefaultTableModel t = (DefaultTableModel) studentAdminTable.getModel();
        while (t.getRowCount() > 0) {
            t.removeRow(0);
        }
        List<User> users = null;
        if(param.equals("all")){
            users = userController.getAll();
        } else {
            users = userController.search("=", "accountId", param);
        }
        
        for (User user : users) {
            t.addRow(new Object[]{
                user.getAccountId(),
                user.getName(),
                user.getGender(),
                user.getPhone(),
                user.getEmail()
            });
        }
    }
            
    private void cashTable(String param){  
        DefaultTableModel t = (DefaultTableModel) cashTable.getModel();
        List<CashAccount> cashAccounts = null;
        if(param.equals("all")){
            cashAccounts = cashController.getAll();
        } else {
            cashAccounts = cashController.search("=", "cashId", param);
        }
        while (t.getRowCount() > 0) {
            t.removeRow(0);
        }
        for (CashAccount cash : cashAccounts) {
            t.addRow(new Object[]{
                cash.getCashId(),
                cash.getName(),
                cash.getDate(),
                cash.getCashType(),
                cash.getDescription(),
                cash.getAmount()
            });
        }
    }
    
    private void clearFieldsUser(){
        userNIMField.setText("");
        userNameField.setText("");
        buttonGroup.clearSelection();
        userPhoneNumberField.setText("");
        userEmailField.setText("");
        userPasswordField.setText("");
    }
    
    private void clearFieldsCash(){
        cashIdField.setText("");
        cashNameField.setText("");
        cashDateChooser.setDate(null);
        cashType.clearSelection();
        cashDescriptionField.setText("");
        cashAmountField.setText("");
    }
    
    private void logChanges(String message) throws IOException {
        File logs = new File("src/util/logs.txt");
        if (!logs.getParentFile().exists()) {
            logs.getParentFile().mkdirs(); // Buat direktori jika belum ada
        }
        if (!logs.exists()) {
            logs.createNewFile();
        }

        String newLine = System.getProperty("line.separator");
        FileOutputStream fos = new FileOutputStream(logs, true);
        OutputStreamWriter osw = new OutputStreamWriter(fos);
        PrintWriter pw = new PrintWriter(osw);

        String timeStamp = new SimpleDateFormat("yyyy/MM/dd/ HH:mm:ss").format(Calendar.getInstance().getTime());
        pw.append(timeStamp + " - " + message + newLine);
        pw.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCashButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JTextField cashAmountField;
    private com.toedter.calendar.JDateChooser cashDateChooser;
    private javax.swing.JTextField cashDescriptionField;
    private javax.swing.JTextField cashIdField;
    private javax.swing.JTextField cashNameField;
    private javax.swing.JTable cashTable;
    private javax.swing.ButtonGroup cashType;
    private javax.swing.JButton clearCashFieldsButton;
    private javax.swing.JButton clearUserFieldsButton;
    private javax.swing.JButton deleteCashButton;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JButton editCashButton;
    private javax.swing.JButton editUserButton;
    private javax.swing.JButton exitAddUsersButton;
    private javax.swing.JButton exitCashFlowButton;
    private javax.swing.JButton exitSummaryButton;
    private javax.swing.JRadioButton femaleRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel kasKeluarLabel;
    private javax.swing.JRadioButton kasKeluarRadioButton;
    private javax.swing.JLabel kasMasukLabel;
    private javax.swing.JRadioButton kasMasukRadioButton;
    private javax.swing.JRadioButton maleRadioButton;
    private javax.swing.JButton printCashButton;
    private javax.swing.JButton printUserButton;
    private javax.swing.JButton ringkasanKasButton;
    private javax.swing.JButton searchCashButton;
    private javax.swing.JButton searchUserButton;
    private javax.swing.JTable studentAdminTable;
    private javax.swing.JLabel totalKasLabel;
    private javax.swing.JTextField userEmailField;
    private javax.swing.JTextField userNIMField;
    private javax.swing.JTextField userNameField;
    private javax.swing.JTextField userPasswordField;
    private javax.swing.JTextField userPhoneNumberField;
    // End of variables declaration//GEN-END:variables
}
